---
title: "Model Story"
format: html
editor: source
---

# Ectomycorrhizal mutualist networks and their influence on system outcomes

```{r, message=FALSE, echo = FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(gganimate)
library(gifski)
library(viridis)
library(viridisLite)
library(plotly)
library(latex2exp)

  
b.color = "#85A389"
n.color = "#A2CDB0"
f.color = "#F1C27B"

prim.color = "#3b78a3"
alt.color = "#bd4665"

log.max = function(x){
  case_when(
    log(x) > 5 ~ 5,
    log(x) < -5 ~ -5,
    .default = log(x)
  )
}
```


# Without ROI
## One tree - one fungus

```{r, echo = FALSE}
#parameter values 
# See two tree two fungus section for a full annotation of what each parameter refers to!
tset = seq(from = 0, to = 100, by = 0.01)
a <- 0.25
p1 <- .5
mB1 <- .15
mN1 <- mB1
epsilon <- 0.15
mF1 <- 0.1
u1 <- .25
N0 <- 100

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 65
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]; E <- e.set[i-1]

  dB1 <- (p1*N1 - (a+mB1)*B1)*dt
  dN1 <- (E*(u1*F1) - mN1*N1)*dt
  dF1 <- ((a*B1)*epsilon - mF1*F1)*dt

b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1;e.set[i] <- E - (dN1)}
```

```{r, echo = FALSE}
sim.1t1f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(f1 = f1.set)%>% 
  mutate(e = e.set)  

long.1t1f.noROI = sim.1t1f.noROI %>% 
  select(time:f1) %>% 
  pivot_longer(cols = b1:f1, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 51 == 1)) 

plot.1t1f.noROI = 
  ggplot(long.1t1f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+
  labs(x = "Time (yrs)", y = "Pool Size")+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")#+transition_reveal(time)

 # animate(plot.1t1f, duration = 5, renderer = gifski_renderer(loop = FALSE), 
 #         height = 5, width = 7, units = "in", res = 300)
# anim_save(here("esa", "plot2t2f.gif"))

plot.1t1f.noROI
```

## Two trees - one fungus

```{r, echo = FALSE}
primary.weight = 0.5
#parameter values
tset = seq(from = 0, to = 5000, by = 0.01)
a <- 0.25
p1 <- .5
p2 <- p1
mB1 <- .15
mB2 <- .15
mN1 <- mB1
mN2 <- mB2
epsilon <- 0.15
mF1 <- 0.1
u1 <- .25
s11 <- primary.weight
s12 <- 1-s11
N0 <- 100
l = 0.5

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 80
b2.set = rep(NaN, length(tset)); b2.set[1] <- 10
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
n2.set = rep(NaN, length(tset)); n2.set[1] <- b2.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]-n2.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]
  B2 <- b2.set[i-1];  N2 <- n2.set[i-1]; E  <- e.set[i-1]
  
  dB1 <- (p1 * N1 - (a + mB1)*B1)*dt
  dN1 <- (E*(u1*F1*s11)-mN1*N1)*dt
  dB2 <- (p2 * N2 - (a + mB2)*B2)*dt
  dN2 <- (E*(u1*F1*s12)-mN2*N2)*dt
  dF1 <- ((a*B1*(1-l)+l*a*B1)*epsilon+(a*B2*(1-l)+l*a*B2)*epsilon-mF1*F1)*dt
  

b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1
b2.set[i] <- B2 + dB2;n2.set[i] <- N2 + dN2;e.set[i] <- E - (dN1)
}
```

```{r, echo = FALSE}
sim.2t1f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(b2 = b2.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(n2 = n2.set) %>% 
  mutate(f1 = f1.set)%>% 
  mutate(e = e.set)

long.2t1f.noROI = sim.2t1f.noROI %>% 
  select(time:f1) %>% 
  pivot_longer(cols = b1:f1, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 501 == 1)) %>% 
  mutate(rep = case_when(
    rep == "1" ~ "Host/Fungus 1",
    rep == "2" ~ "Host/Fungus 2"
  ))


plot.2t1f.noROI = 
  ggplot(long.2t1f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+ 
  facet_wrap(~rep)+
  labs(x = "Time", y = "Pool Size", title = "Different starting sizes")+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")

plot.2t1f.noROI
```

```{r, echo = FALSE}
primary.weight = 0.75
#parameter values
tset = seq(from = 0, to = 5000, by = 0.01)
a <- 0.25
p1 <- .5
p2 <- p1
mB1 <- .15
mB2 <- .15
mN1 <- mB1
mN2 <- mB2
epsilon <- 0.15
mF1 <- 0.1
u1 <- .25
s11 <- primary.weight
s12 <- 1-s11
N0 <- 100
l = 0.5

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 50
b2.set = rep(NaN, length(tset)); b2.set[1] <- 50
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
n2.set = rep(NaN, length(tset)); n2.set[1] <- b2.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]-n2.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]
  B2 <- b2.set[i-1];  N2 <- n2.set[i-1]; E  <- e.set[i-1]
  
  dB1 <- (p1 * N1 - (a + mB1)*B1)*dt
  dN1 <- (E*(u1*F1*s11)-mN1*N1)*dt
  dB2 <- (p2 * N2 - (a + mB2)*B2)*dt
  dN2 <- (E*(u1*F1*s12)-mN2*N2)*dt
  dF1 <- ((a*B1*(1-l)+l*a*B1)*epsilon+(a*B2*(1-l)+l*a*B2)*epsilon-mF1*F1)*dt
  

b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1
b2.set[i] <- B2 + dB2;n2.set[i] <- N2 + dN2;e.set[i] <- E - (dN1)
}
```

```{r, echo = FALSE}
sim.2t1f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(b2 = b2.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(n2 = n2.set) %>% 
  mutate(f1 = f1.set)%>% 
  mutate(e = e.set)

long.2t1f.noROI = sim.2t1f.noROI %>% 
  select(time:f1) %>% 
  pivot_longer(cols = b1:f1, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 501 == 1)) %>% 
  mutate(rep = case_when(
    rep == "1" ~ "Host/Fungus 1",
    rep == "2" ~ "Host/Fungus 2"
  ))


plot.2t1f.noROI = 
  ggplot(long.2t1f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+ 
  facet_wrap(~rep)+
  labs(x = "Time", y = "Pool Size", title = "Fungal preference for host 1")+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")

plot.2t1f.noROI
```
The first plot above shows that equillibrium will be reach no matter the relative sizes of trees at the start. 
The second plot shows that fungal preference for one or the other host will result in uneven population equillibria. 


## One tree - two fungi

```{r, echo = FALSE}
primary.weight = 0.5 # how much preference each member of the network has for it's primary partner (e.g. Fungus 2's preference for Host 2)
#parameter values
tset = seq(from = 0, to = 5000, by = 0.01) # a timeseries to iterate over
a <- 0.25 # host allocation to symbiont
p1 <- .5 # host photosynthetic rate
mB1 <- .15 # host mortality
mN1 <- mB1 # host nitrogen loss rate
r11 <- primary.weight # preference of host 1 for fungus 1
r12 <- 1-r11 # preference of host 1 to fungus 2
epsilon <- 0.15 # fungal conversion efficiency
mF1 <- 0.1 # fungus 1 mortality rate
mF2 <- mF1 # fungus 2 mortality rate
u1 <- .25 # fungus 1 uptake rate
u2 <- .25 # fungus 2 uptake rate
N0 <- 100 # total system nitrogen
l = 0.05 # percent of tree resources lost from ROI allocation

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 65
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
f2.set = rep(NaN, length(tset)); f2.set[1] <- b1.set[1]*0.015
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]-n2.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]
                                         F2 <- f2.set[i-1]; E <- e.set[i-1]

  dB1 <- (p1 * N1 - (a + mB1)*B1)*dt
  dN1 <- (E*(u1*F1+u2*F2)-mN1*N1)*dt
  
  dF1 <- ((a*B1*r11)*epsilon-mF1*F1)*dt
  dF2 <- ((a*B1*r12)*epsilon-mF2*F2)*dt

b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1
                                            f2.set[i] <- F2 + dF2;e.set[i] <- E - (dN1 + dN2)
}
```

```{r, echo = FALSE}
sim.1t2f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(f1 = f1.set)%>% 
  mutate(f2 = f2.set) %>%  
  mutate(e = e.set) 

long.1t2f.noROI = sim.1t2f.noROI %>% 
  select(time:f2) %>% 
  pivot_longer(cols = b1:f2, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 501 == 1)) %>% 
  mutate(rep = case_when(
    rep == "1" ~ "Host/Fungus 1",
    rep == "2" ~ "Host/Fungus 2"
  ))


plot.1t2f.noROI = 
  ggplot(long.1t2f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+ 
  facet_wrap(~rep)+
  labs(x = "Time", y = "Pool Size", title = "Different starting sizes for the fungi")+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")
plot.1t2f.noROI

```


```{r, echo = FALSE}
primary.weight = 0.75 # how much preference each member of the network has for it's primary partner (e.g. Fungus 2's preference for Host 2)
#parameter values
tset = seq(from = 0, to = 5000, by = 0.01) # a timeseries to iterate over
a <- 0.25 # host allocation to symbiont
p1 <- .5 # host photosynthetic rate
mB1 <- .15 # host mortality
mN1 <- mB1 # host nitrogen loss rate
r11 <- primary.weight # preference of host 1 for fungus 1
r12 <- 1-r11 # preference of host 1 to fungus 2
epsilon <- 0.15 # fungal conversion efficiency
mF1 <- 0.1 # fungus 1 mortality rate
mF2 <- mF1 # fungus 2 mortality rate
u1 <- .25 # fungus 1 uptake rate
u2 <- .25 # fungus 2 uptake rate
N0 <- 100 # total system nitrogen
l = 0.05 # percent of tree resources lost from ROI allocation

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 65
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
f2.set = rep(NaN, length(tset)); f2.set[1] <- b1.set[1]*0.15
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]-n2.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]
                                         F2 <- f2.set[i-1]; E <- e.set[i-1]

  dB1 <- (p1 * N1 - (a + mB1)*B1)*dt
  dN1 <- (E*(u1*F1+u2*F2)-mN1*N1)*dt
  
  dF1 <- ((a*B1*r11)*epsilon-mF1*F1)*dt
  dF2 <- ((a*B1*r12)*epsilon-mF2*F2)*dt

b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1
                                            f2.set[i] <- F2 + dF2;e.set[i] <- E - (dN1 + dN2)
}
```

```{r, echo = FALSE}
sim.1t2f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(f1 = f1.set)%>% 
  mutate(f2 = f2.set) %>%  
  mutate(e = e.set) 

long.1t2f.noROI = sim.1t2f.noROI %>% 
  select(time:f2) %>% 
  pivot_longer(cols = b1:f2, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 501 == 1)) %>% 
  mutate(rep = case_when(
    rep == "1" ~ "Host/Fungus 1",
    rep == "2" ~ "Host/Fungus 2"
  ))


plot.1t2f.noROI = 
  ggplot(long.1t2f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+ 
  facet_wrap(~rep)+
  labs(x = "Time", y = "Pool Size", title = "Host preference for Fungus 1")+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")
plot.1t2f.noROI

```
Similar to the 2T1F system, we see again here that initial conditions can be overcome toward mirrored equilibrium population sizes. Preference drives outcomes. 

## Two trees - two fungi

```{r, echo = FALSE}
primary.weight = 0.75 # how much preference each member of the network has for it's primary partner (e.g. Fungus 2's preference for Host 2)
#parameter values
tset = seq(from = 0, to = 5000, by = 0.01) # a timeseries to iterate over
a <- 0.25 # host allocation to symbiont
p1 <- .5 # host 1 photosynthetic rate
p2 <- p1 # host 2 photosynthetic rate
mB1 <- .15 # host 1 mortality
mB2 <- .15 # host 2 mortality
mN1 <- mB1 # host 1 nitrogen loss rate
mN2 <- mB2 # host 2 nitrogen loss rate
r11 <- primary.weight # preference of host 1 toward fungus 1
r12 <- 1-r11 # preference of host 1 toward fungus 2
r22 <- primary.weight # preference of host 2 toward fungus 2
r21 <- 1-r22 # preference of host 2 toward fungus 1
epsilon <- 0.15 # fungal conversion efficiency
mF1 <- 0.1 # fungus 1 mortality rate
mF2 <- mF1 # fungus 2 mortality rate
u1 <- .25 # fungus 1 uptake rate
u2 <- .25 # fungus 2 uptake rate
s11 <- primary.weight # preference of fungus 1 toward host 1
s12 <- 1-s11 # preference of fungus 1 toward host 2
s22 <- primary.weight # preference of fungus 2 toward host 2
s21 <- 1-s22 # preference of fungus 2 toward host 1
N0 <- 100 # total system nitrogen

#holding vectors and initial conditions
b1.set = rep(NaN, length(tset)); b1.set[1] <- 65
b2.set = rep(NaN, length(tset)); b2.set[1] <- 50
n1.set = rep(NaN, length(tset)); n1.set[1] <- b1.set[1]*0.5
n2.set = rep(NaN, length(tset)); n2.set[1] <- b2.set[1]*0.5
f1.set = rep(NaN, length(tset)); f1.set[1] <- b1.set[1]*0.15
f2.set = rep(NaN, length(tset)); f2.set[1] <- b2.set[1]*0.15
e.set = rep(NaN, length(tset));  e.set[1]  <- 100 - n1.set[1]-n2.set[1]

for(i in 2:length(tset)){
  dt <- tset[i]-tset[i-1]
  B1 <- b1.set[i-1];  N1 <- n1.set[i-1]; F1 <- f1.set[i-1]
  B2 <- b2.set[i-1];  N2 <- n2.set[i-1];F2 <- f2.set[i-1]; E <- e.set[i-1]

  dB1 <- (p1 * N1 - (a + mB1)*B1)*dt
  dN1 <- (E*(u1*F1*s11+u2*F2*s21)-mN1*N1)*dt
  dB2 <- (p2 * N2 - (a + mB2)*B2)*dt
  dN2 <- (E*(u1*F1*s12+u2*F2*s22)-mN2*N2)*dt
  dF1 <- ((a*B1*r11)*epsilon+(a*B2*r21)*epsilon-mF1*F1)*dt
  dF2 <- ((a*B1*r12)*epsilon+(a*B2*r22)*epsilon-mF2*F2)*dt
  
b1.set[i] <- B1 + dB1;n1.set[i] <- N1 + dN1;f1.set[i] <- F1 + dF1
b2.set[i] <- B2 + dB2;n2.set[i] <- N2 + dN2;f2.set[i] <- F2 + dF2;e.set[i] <- E - (dN1 + dN2)
}
```

```{r, echo = FALSE}
sim.2t2f.noROI = tibble(time = tset) %>% 
  mutate(b1 = b1.set)%>% 
  mutate(b2 = b2.set)%>% 
  mutate(n1 = n1.set)%>% 
  mutate(n2 = n2.set) %>% 
  mutate(f1 = f1.set)%>% 
  mutate(f2 = f2.set) %>%  
  mutate(e = e.set) 

long.2t2f.noROI = sim.2t2f.noROI %>% 
  select(time:f2) %>% 
  pivot_longer(cols = b1:f2, names_to = "pool", values_to = 'size') %>% 
  mutate(rep = str_sub(pool, 2,2)) %>% 
  mutate(pool = str_sub(pool, 1,1)) %>%
  group_by(pool, rep) %>% 
 slice(which(row_number() %% 501 == 1)) %>% 
  mutate(rep = case_when(
    rep == "1" ~ "Host/Fungus 1",
    rep == "2" ~ "Host/Fungus 2"
  ))

plot.2t2f.noROI = 
  ggplot(long.2t2f.noROI, aes(x = time, y = size, color = pool))+
  geom_line(aes(linetype = rep), size = 1.5)+ 
  facet_wrap(~rep)+
  labs(x = "Time", y = "Pool Size", title= paste0("Different initial conditions and ", 100*primary.weight, "% host partner pairing"))+
  scale_color_manual(name = "", breaks = c("b", "n", "f"), labels = c("Host biomass", "Host nitrogen", "Fungal biomass"), values = c(b.color, n.color, f.color))+
  theme_classic()+guides(linetype = "none")#+transition_reveal(time)


plot.2t2f.noROI
```
The 2T2F system is unaffected by both initial condition and percent of sharing. 
